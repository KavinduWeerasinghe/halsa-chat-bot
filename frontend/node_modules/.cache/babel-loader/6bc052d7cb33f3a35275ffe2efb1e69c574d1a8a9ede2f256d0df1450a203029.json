{"ast":null,"code":"var _jsxFileName = \"C:\\\\Halsa Coding\\\\Quick codes\\\\rag-model\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleQuestionChange = event => {\n    setQuestion(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent page reload\n    if (!question.trim()) return; // Don't send empty questions\n\n    setIsLoading(true);\n    setAnswer('');\n\n    // Send question to the backend API\n    axios.post('http://127.0.0.1:8000/query', {\n      question: question\n    }).then(response => {\n      if (response.data.answer) {\n        setAnswer(response.data.answer);\n      } else {\n        setAnswer('Sorry, there was an error processing your question.');\n      }\n    }).catch(error => {\n      console.error(\"API call failed:\", error);\n      setAnswer('Failed to connect to the backend. Is the server running?');\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"H\\xE4lsa Document Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: handleQuestionChange,\n          placeholder: \"Ask something about the documents...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Thinking...' : 'Ask'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Uj8GLkpVaJ/VfKebe/UaehU0s9I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","question","setQuestion","answer","setAnswer","isLoading","setIsLoading","handleQuestionChange","event","target","value","handleSubmit","preventDefault","trim","post","then","response","data","catch","error","console","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Halsa Coding/Quick codes/rag-model/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [question, setQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleQuestionChange = (event) => {\n    setQuestion(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Prevent page reload\n    if (!question.trim()) return; // Don't send empty questions\n\n    setIsLoading(true);\n    setAnswer('');\n\n    // Send question to the backend API\n    axios.post('http://127.0.0.1:8000/query', { question: question })\n      .then(response => {\n        if (response.data.answer) {\n          setAnswer(response.data.answer);\n        } else {\n          setAnswer('Sorry, there was an error processing your question.');\n        }\n      })\n      .catch(error => {\n        console.error(\"API call failed:\", error);\n        setAnswer('Failed to connect to the backend. Is the server running?');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>HÃ¤lsa Document Chatbot</h1>\n        <form onSubmit={handleSubmit} className=\"chat-form\">\n          <input\n            type=\"text\"\n            value={question}\n            onChange={handleQuestionChange}\n            placeholder=\"Ask something about the documents...\"\n            disabled={isLoading}\n          />\n          <button type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Thinking...' : 'Ask'}\n          </button>\n        </form>\n\n        {answer && (\n          <div className=\"answer-container\">\n            <p>{answer}</p>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}